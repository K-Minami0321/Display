<UserControl x:Class="Display.ManufactureInfo"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:local="clr-namespace:Display" d:DataContext="{d:DesignInstance Type=local:ViewModelManufactureInfo}"
      mc:Ignorable="d" d:DesignWidth="1160" d:DesignHeight="640" 
      FontSize="35" FontFamily="Meiryo UI">
    <!-- イベント -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding CommandLoad}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <!-- 画面表示 -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="570"/>
            <RowDefinition Height="60*"/>
        </Grid.RowDefinitions>
        <!-- 上領域 -->
        <Grid Grid.Row="0" Background="#D7DCDE" Height="560" IsEnabled="{Binding IsEnable}">
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                    <!-- 左領域 -->
                    <Grid Margin="40,40,0,40" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition Width="380"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="70"/>
                            <RowDefinition Height="70"/>
                            <RowDefinition Height="70"/>
                            <RowDefinition Height="70"/>
                            <RowDefinition Height="70"/>
                            <RowDefinition Height="70"/>
                            <RowDefinition Height="70"/>
                        </Grid.RowDefinitions>
                        <Viewbox Grid.Row="0" Grid.Column="0" Style="{StaticResource Label}">
                            <TextBlock Text="作業日"/>
                        </Viewbox>
                        <Viewbox Grid.Row="0" Grid.Column="1" Style="{StaticResource Label}" Margin="0,10,10,10">
                            <TextBlock Text="{Binding ManufactureDate, FallbackValue=2024年6月3日, Converter={StaticResource DateTimeConverter}}"/>
                        </Viewbox>
                        <Viewbox Grid.Row="1" Grid.Column="0" Style="{StaticResource Label}">
                            <TextBlock Text="品 番"/>
                        </Viewbox>
                        <Viewbox Grid.Row="1" Grid.Column="1" Style="{StaticResource Label}" Margin="0,10,10,10">
                            <TextBlock Text="{Binding ProductName, FallbackValue=MH024000}" FontWeight="Bold"/>
                        </Viewbox>
                        <Viewbox Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" Stretch="Uniform" Margin="0,13,13,13">
                            <TextBlock Text="ロット番号"/>
                        </Viewbox>
                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                            <TextBox x:Name="TextLotNumber" Text="{Binding LotNumber}" Width="250"
                                     materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed" MaxLength="{Binding LengthLotNumber}" InputMethod.IsInputMethodEnabled="False">
                                <TextBox.Resources>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FocusLotNumber}" Value="True">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextLotNumber}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="LotNumber"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding LostFocus}" CommandParameter="LotNumber"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <i:Interaction.Behaviors>
                                    <local:TextBoxBehavior Mode="Hyphen"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBox x:Name="TextLotNumberSEQ" Text="{Binding LotNumberSEQ}" Width="80" Margin="20,0,0,0" TextAlignment="Center"
                                     materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed" MaxLength="2" InputMethod.IsInputMethodEnabled="False">
                                <TextBox.Resources>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FocusLotNumberSEQ}" Value="True">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextLotNumberSEQ}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="LotNumberSEQ"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding LostFocus}" CommandParameter="LotNumberSEQ"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <i:Interaction.Behaviors>
                                    <local:TextBoxBehavior Mode="Number"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </StackPanel>
                        <Viewbox Grid.Row="3" Grid.Column="0" Style="{StaticResource Label}">
                            <TextBlock Text="工 程"/>
                        </Viewbox>
                        <TextBox Grid.Row="3" Grid.Column="1" x:Name="TextWorkProcess" Text="{Binding WorkProcess}" HorizontalAlignment="Stretch" Margin="0,0,-5,0" 
                                    IsEnabled="{Binding EnabledControl1}" InputMethod.IsInputMethodEnabled="True">
                            <TextBox.Resources>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FocusWorkProcess}" Value="True">
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextWorkProcess}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="WorkProcess"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <i:Interaction.Behaviors>
                                <local:TextBoxBehavior/>
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <Viewbox Grid.Row="4" Grid.Column="0" Style="{StaticResource Label}">
                            <TextBlock Text="担当者"/>
                        </Viewbox>
                        <TextBox Grid.Row="4" Grid.Column="1" x:Name="TextWorker" Text="{Binding Worker}" HorizontalAlignment="Stretch" Margin="0,0,100,0"
                                    IsEnabled="{Binding EnabledControl1}" InputMethod.IsInputMethodEnabled="True">
                            <TextBox.Resources>
                                <Style TargetType="TextBox" BasedOn="{StaticResource TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FocusWorker}" Value="True">
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextWorker}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="Worker"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <i:Interaction.Behaviors>
                                <local:TextBoxBehavior/>
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <Viewbox Grid.Row="5" Grid.Column="0" Style="{StaticResource Label}">
                            <TextBlock Text="作業時間"/>
                        </Viewbox>
                        <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal">
                            <TextBox x:Name="TextStartTime" Text="{Binding StartTime}" Width="130" materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed" 
                                     MaxLength="{Binding LengthStartTime}" InputMethod.IsInputMethodEnabled="False" IsEnabled="{Binding EnabledControl2}" Visibility="{Binding EnabledControl1,Converter={StaticResource CollapsedConverter}}">
                                <TextBox.Resources>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FocusStartTime}" Value="True">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextStartTime}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="StartTime"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding LostFocus}" CommandParameter="StartTime"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <i:Interaction.Behaviors>
                                    <local:TextBoxBehavior Mode="Number"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <Viewbox Style="{StaticResource Label}" Margin="0,0,13,0">
                                <TextBlock Text="{Binding StartTime}" Visibility="{Binding VisibleButtonBreak,Converter={StaticResource CollapsedConverter}}"/>
                            </Viewbox>
                            <Viewbox Style="{StaticResource Label}">
                                <TextBlock Text="～" Visibility="{Binding EnabledControl2,Converter={StaticResource CollapsedConverter}}"/>
                            </Viewbox>
                            <TextBox x:Name="TextEndTime" Text="{Binding EndTime}" Width="130" materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed" 
                                        MaxLength="{Binding LengthEndTime}" InputMethod.IsInputMethodEnabled="False" IsEnabled="{Binding EnabledControl2}" Visibility="{Binding EnabledControl1,Converter={StaticResource CollapsedConverter}}">
                                <TextBox.Resources>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FocusEndTime}" Value="True">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextEndTime}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="EndTime"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding LostFocus}" CommandParameter="EndTime"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <i:Interaction.Behaviors>
                                    <local:TextBoxBehavior Mode="Number"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <Viewbox Style="{StaticResource Label}">
                                <TextBlock Text="{Binding EndTime}" Visibility="{Binding VisibleButtonBreak,Converter={StaticResource CollapsedConverter}}"/>
                            </Viewbox>
                        </StackPanel>
                        <Viewbox Grid.Row="6" Grid.Column="0" Style="{StaticResource Label}">
                            <TextBlock Text="{Binding LabelAmount, FallbackValue=数 量}" Visibility="{Binding VisiblePackaging, Converter={StaticResource CollapsedConverter}}"/>
                        </Viewbox>
                        <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                            <TextBox x:Name="TextAmount" Text="{Binding Amount}" Width="130" 
                                        materialDesign:TextFieldAssist.CharacterCounterVisibility="Collapsed" MaxLength="{Binding LengthAmount}" Visibility="{Binding VisiblePackaging,Converter={StaticResource CollapsedConverter}}" 
                                        IsEnabled="{Binding EnabledControl2}" InputMethod.IsInputMethodEnabled="False">
                                <TextBox.Resources>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource TextBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FocusAmount}" Value="True">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextAmount}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="Amount"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <i:Interaction.Behaviors>
                                    <local:TextBoxBehavior Mode="Number"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <CheckBox x:Name="CheckCompleted" IsChecked="{Binding Completed, Converter={StaticResource CompletConverter}}" FontSize="20" 
                                      Visibility="{Binding VisiblePackaging, Converter={StaticResource CollapsedConverter}}" IsEnabled="{Binding EnabledControl2}" Margin="20,0,0,0">
                                <Viewbox Stretch="Uniform">
                                    <TextBlock Text="ロット完了"/>
                                </Viewbox>
                                <CheckBox.Resources>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource Check}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FocusCompleted}" Value="True">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=CheckCompleted}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Resources>
                                <i:Interaction.Behaviors>
                                    <local:CheckBoxBehavior/>
                                </i:Interaction.Behaviors>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TouchDown">
                                        <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="Completed"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="Completed"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <CheckBox x:Name="CheckSales" IsChecked="{Binding Sales, Converter={StaticResource AsteriskConverter}}" FontSize="20"
                                        Visibility="{Binding VisibleSeal, Converter={StaticResource CollapsedConverter}}" IsEnabled="{Binding EnabledControl2}">
                                <Viewbox Stretch="Uniform" Margin="10,10,10,10">
                                    <TextBlock Text="売 上"/>
                                </Viewbox>
                                <CheckBox.Resources>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource Check}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FocusSales}" Value="True">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=CheckSales}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Resources>
                                <i:Interaction.Behaviors>
                                    <local:CheckBoxBehavior/>
                                </i:Interaction.Behaviors>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TouchDown">
                                        <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="Sales"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="Sales"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <CheckBox.InputBindings>
                                    <KeyBinding Gesture="Enter" Command="{Binding CommandFocus}"/>
                                    <KeyBinding Gesture="Tab" Command="{Binding CommandFocus}"/>
                                </CheckBox.InputBindings>
                            </CheckBox>
                            <CheckBox x:Name="CheckOutsourced" IsChecked="{Binding Outsourced, Converter={StaticResource AsteriskConverter}}" FontSize="20"
                                      Visibility="{Binding VisibleOutsourced, Converter={StaticResource CollapsedConverter}}" IsEnabled="{Binding EnabledControl2}">
                                <Viewbox Stretch="Uniform" Margin="10,10,10,10">
                                    <TextBlock Text="外 注"/>
                                </Viewbox>
                                <CheckBox.Resources>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource Check}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FocusOutsourced}" Value="True">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=CheckOutsourced}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Resources>
                                <i:Interaction.Behaviors>
                                    <local:CheckBoxBehavior/>
                                </i:Interaction.Behaviors>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TouchDown">
                                        <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="Outsourced"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding GotFocus}" CommandParameter="Outsourced"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <CheckBox.InputBindings>
                                    <KeyBinding Gesture="Enter" Command="{Binding CommandFocus}"/>
                                    <KeyBinding Gesture="Tab" Command="{Binding CommandFocus}"/>
                                </CheckBox.InputBindings>
                            </CheckBox>
                        </StackPanel>
                    </Grid>
                    <!-- 右領域 -->
                    <Grid Margin="20,0,0,0" Width="520" HorizontalAlignment="Left" Visibility="{Binding IsEnable, Converter={StaticResource CollapsedConverter}}">
                        <Grid  Visibility="{Binding VisibleTenKey, Converter={StaticResource CollapsedConverter}, FallbackValue=Visible}">
                            <local:ControlTenKey/>
                        </Grid>
                        <Grid Visibility="{Binding VisibleWorker, Converter={StaticResource CollapsedConverter}, FallbackValue=Collapsed}">
                            <local:ControlWorker/>
                        </Grid>
                        <Grid Visibility="{Binding VisibleWorkProcess, Converter={StaticResource CollapsedConverter}, FallbackValue=Collapsed}">
                            <local:ControlWorkProcess/>
                        </Grid>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </Grid>
        <!-- 下領域 -->
        <Grid Grid.Row="1" Visibility="{Binding IsEnable, Converter={StaticResource CollapsedConverter}}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <Button Style="{StaticResource Bottom}" Command="{Binding CommandButton}" CommandParameter="WorkStart" Visibility="{Binding VisibleButtonStart, Converter={StaticResource CollapsedConverter}}">
                    <Viewbox Style="{StaticResource Button}">
                        <WrapPanel>
                            <materialDesign:PackIcon Kind="TimerStart" Margin="0,3,20,0" Height="30" Width="30"/>
                            <TextBlock Text="開　始"/>
                        </WrapPanel>
                    </Viewbox>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="WorkStart"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Style="{StaticResource Bottom}" Command="{Binding CommandButton}" CommandParameter="Cancel" Visibility="{Binding VisibleButtonCancel, Converter={StaticResource CollapsedConverter}}">
                    <Viewbox Style="{StaticResource Button}">
                        <WrapPanel>
                            <materialDesign:PackIcon Kind="Erase" Margin="0,3,20,0" Height="30" Width="30"/>
                            <TextBlock Text="取　消"/>
                        </WrapPanel>
                    </Viewbox>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="Cancel"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Style="{StaticResource Bottom}" Command="{Binding CommandButton}" CommandParameter="WorkEnd" Visibility="{Binding VisibleButtonEnd, Converter={StaticResource CollapsedConverter}}">
                    <Viewbox Style="{StaticResource Button}">
                        <WrapPanel>
                            <materialDesign:PackIcon Kind="TimerEdit" Margin="0,3,20,0" Height="30" Width="30"/>
                            <TextBlock Text="完　了"/>
                        </WrapPanel>
                    </Viewbox>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="WorkEnd"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Style="{StaticResource Bottom}" Command="{Binding CommandButton}" CommandParameter="WorkBreak" Visibility="{Binding VisibleButtonBreak, Converter={StaticResource CollapsedConverter}}">
                    <Viewbox Style="{StaticResource Button}">
                        <WrapPanel>
                            <materialDesign:PackIcon Kind="TimerCancel" Margin="0,3,20,0" Height="30" Width="30"/>
                            <TextBlock Text="{Binding BreakName,FallbackValue=中　断}"/>
                        </WrapPanel>
                    </Viewbox>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="WorkBreak"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Style="{StaticResource Bottom}" Command="{Binding CommandButton}" CommandParameter="Regist" Visibility="{Binding VisibleEdit, Converter={StaticResource CollapsedConverter}}">
                    <Viewbox Style="{StaticResource Button}">
                        <WrapPanel>
                            <materialDesign:PackIcon Kind="PenAdd" Margin="0,3,20,0" Height="30" Width="30"/>
                            <TextBlock Text="{Binding ButtonName, FallbackValue=登　録}"/>
                        </WrapPanel>
                    </Viewbox>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="Regist"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Style="{StaticResource Bottom}" Command="{Binding CommandButton}" CommandParameter="Delete" Visibility="{Binding VisibleDelete, Converter={StaticResource CollapsedConverter}}">
                    <Viewbox Style="{StaticResource Button}">
                        <WrapPanel>
                            <materialDesign:PackIcon Kind="Delete" Margin="0,3,20,0" Height="30" Width="30"/>
                            <TextBlock Text="削　除"/>
                        </WrapPanel>
                    </Viewbox>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TouchDown">
                            <i:InvokeCommandAction Command="{Binding CommandButton}" CommandParameter="Delete"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
