<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Display"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">

    <!-- Converter -->
    <local:InsertConverter x:Key="InsertConverter" />
    <local:CollapsedConverter x:Key="CollapsedConverter"/>
    <local:CollapsedValueConverter x:Key="CollapsedValueConverter"/>
    <local:CheckConverter x:Key="CheckConverter"/>
    <local:CoilConverter x:Key="CoilConverter"/>
    <local:CompletedConverter x:Key="CompletedConverter"/>
    <local:BoolConverter x:Key="BoolConverter"/>
    <local:CircleEnclosingConverter x:Key="CircleEnclosingConverter"/>
    <local:CurrencyConverter x:Key="CurrencyConverter"/>
    <local:DateTimeConverter x:Key="DateTimeConverter"/>
    <local:MonthDayConverter x:Key="MonthDayConverter"/>
    <local:AsteriskConverter x:Key="AsteriskConverter"/>
    <local:CompletConverter x:Key="CompletConverter"/>
    <local:ProcessColorConverter x:Key="ProcessColorConverter" />
    <local:CompletedColorConverter x:Key="CompletedColorConverter"/>
    <local:CheckColorConverter x:Key="CheckColorConverter"/>
    <local:DateTimeToDayOfWeekBrushConverter x:Key="DateTimeToDayOfWeekBrushConverter"/>

    <!-- ScrollBar -->
    <sys:Double x:Key="ScrollBarSize">20</sys:Double>
    <sys:Double x:Key="ThumbSize">16</sys:Double>
    <sys:Double x:Key="ScrollBarMarginSize"></sys:Double>
    <SolidColorBrush x:Key="ScrollBarTrackBrush" Color="#FFFAFAFA" />
    <SolidColorBrush x:Key="ThumbBrush" Color="#55546E7A" />
    <SolidColorBrush x:Key="ScrollBarBorderBrush" Color="{DynamicResource Border}" />

    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4"  Background="{StaticResource ThumbBrush}" BorderBrush="{StaticResource ScrollBarBorderBrush}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <!-- 縦向きのスクロールバー -->
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="{StaticResource ScrollBarSize}"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Margin">
                    <Setter.Value>
                        <Thickness Left="{StaticResource ScrollBarMarginSize}" Top="{StaticResource ScrollBarMarginSize}" Right="{StaticResource ScrollBarMarginSize}" Bottom="{StaticResource ScrollBarMarginSize}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border CornerRadius="0" Background="{StaticResource ScrollBarTrackBrush}">
                                <Grid>
                                    <Track x:Name="PART_Track" IsDirectionReversed="true">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbStyle}"  Width="{StaticResource ThumbSize}" Margin="0,1"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!-- 横向きのスクロールバー -->
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="{StaticResource ScrollBarSize}" />
                <Setter Property="Margin">
                    <Setter.Value>
                        <Thickness Left="{StaticResource ScrollBarMarginSize}" Top="{StaticResource ScrollBarMarginSize}" Right="{StaticResource ScrollBarMarginSize}" Bottom="{StaticResource ScrollBarMarginSize}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border CornerRadius="0" Background="{StaticResource ScrollBarTrackBrush}">
                                <Grid>
                                    <Track x:Name="PART_Track" IsDirectionReversed="false">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbStyle}" Height="{StaticResource ThumbSize}" Margin="1,0"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="OnlyRadiusScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0">
                            <ScrollContentPresenter.Margin>
                                <Thickness Left="{StaticResource ScrollBarMarginSize}" Top="{StaticResource ScrollBarMarginSize}" Right="{StaticResource ScrollBarMarginSize}" Bottom="{StaticResource ScrollBarMarginSize}" />
                            </ScrollContentPresenter.Margin>
                        </ScrollContentPresenter>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" Orientation="Vertical" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Style="{StaticResource OnlyRadiusScrollBar}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Style="{StaticResource OnlyRadiusScrollBar}"/>
                        <Border Grid.Column="1" Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#FFFFFF"/>
    </Style>
    <Style x:Key="TenKey" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="50" />
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="110"/>
        <Setter Property="Background" Value="#607D8B"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#34515E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#34515E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Top" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Background" Value="#607D8B"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#24414E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#34515E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Bottom" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Background" Value="#607D8B"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#24414E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#34515E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Select" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="163"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Background" Value="#607D8B"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#24414E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#34515E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BottomPackSpecification" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
        <Setter Property="Background" Value="#607D8B"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#24414E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#34515E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Search" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Background" Value="#607D8B"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#24414E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#34515E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SelectVideo" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Background" Value="#607D8B"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#24414E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#34515E"/>
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Border -->
    <Style x:Key="BorderLabel" TargetType="Border">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Background" Value="#FF90A4AE"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Height" Value="55"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
      
    <!-- CheckBox -->
    <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
    </Style>
    <Style x:Key="Check" TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Rectangle -->
    <Style x:Key="RectangleDotLine"  TargetType="{x:Type Rectangle}">
        <Setter Property="Stroke" Value="#AAAAAA"/>
        <Setter Property="StrokeDashArray" Value="2"/>
        <Setter Property="StrokeThickness" Value="0.5"/>
    </Style>

    <!-- TextBlock -->
    <Style TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextLabel" TargetType="TextBlock">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextDate" TargetType="TextBlock">
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Margin" Value="0,0,0,2"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>
    <Style x:Key="TextDateLeft" TargetType="TextBlock">
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Margin" Value="0,0,0,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>
    <Style x:Key="TenKeyString" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Margin" Value="20,20,20,20"/>
    </Style>

    <!-- TextBox -->
    <Style x:Key="MaterialDesignOutlinedTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True"/>
        <Setter Property="wpf:TextFieldAssist.TextFieldCornerRadius" Value="4" />
        <Setter Property="Padding" Value="{x:Static wpf:Constants.OutlinedTextBoxDefaultPadding}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#FFFFFF"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFFFFF"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#000000"/>
                <Setter Property="Background" Value="#E6E9EA"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#D7DCDE"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#000000"/>
                <Setter Property="Background" Value="#E6E9EA"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#D7DCDE"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LogStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBox -->
    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#FFFFFF"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#E6E9EA"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#FFFFFF"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#FFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#E6E9EA"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ComboBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <!-- ListBox -->
    <Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignListBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="SelectionMode" Value="Single"/>
    </Style>
    
    <!-- ViewBox-->
    <Style x:Key="Label" TargetType="Viewbox" >
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Margin" Value="0,13,13,13"/>
    </Style>
    <Style x:Key="Button" TargetType="Viewbox" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Margin" Value="0,10,10,10"/>
    </Style>

    <!-- DataGrid -->
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource ResourceKey=MaterialDesignDataGrid}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="None"/>
        <Setter Property="EnableColumnVirtualization" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard"/>
        <Setter Property="IsManipulationEnabled" Value="False" />
    </Style>
    <Style x:Key="DefultHeader" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="#546E7A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="BorderBrush" Value="#FFFFFF"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Height" Value="35"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#546E7A"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
    </Style>
    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>
    <Style x:Key="TabStopCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="#000000"/>
                <Setter Property="Background" Value="#DDDDDD"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
